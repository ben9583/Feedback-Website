---
import Input from '../components/Input.astro'
import Layout from '../layouts/Layout.astro'
import Client, { type DatabaseEntry } from '../lib/db'

let message = ''
let data: DatabaseEntry | undefined
const client = new Client()

const handleRequest = async (code?: string, feedbackText?: string) => {
  if (!code) return

  await client.connect()
  if (feedbackText && feedbackText.toString().trim()) {
    const res = await client.query('SELECT * FROM feedback WHERE code = $1', [
      code,
    ])
    if (res.rowCount === 0) {
      message = 'Invalid code. Please try again.'
      await client.end()
      return
    }

    const entry: DatabaseEntry = res.rows[0]
    if (entry.submitted) {
      message =
        'This code has already been submitted. Please contact Ben if you need to resubmit.'
      await client.end()
      return
    }

    await client.query(
      'UPDATE feedback SET submitted = true, response = $1, submitted_on = current_timestamp WHERE code = $2 RETURNING *',
      [feedbackText, code]
    )
    await client.end()
    return Astro.redirect('/thanks', 302)
  } else {
    const res = await client.query('SELECT * FROM feedback WHERE code = $1', [
      code,
    ])
    if (res.rowCount === 0) {
      message = 'Invalid code. Please try again.'
      await client.end()
      return
    }

    const entry: DatabaseEntry = res.rows[0]
    if (entry.submitted) {
      message =
        'This code has already been submitted. Please contact Ben if you need to resubmit.'
      await client.end()
      return
    }

    message = ''
    await client.end()
    data = res.rows[0]
    return
  }
}

const handleGet = async (): Promise<Response | undefined> => {
  const url = new URL(Astro.request.url)
  const params = new URLSearchParams(url.search)
  const codeQuery = params.get('code')

  return await handleRequest(codeQuery ?? undefined)
}

const handlePost = async (): Promise<Response | undefined> => {
  const data = await Astro.request.formData()
  const codeQuery = data.get('code')
  const feedbackText = data.get('feedback-text')

  return await handleRequest(codeQuery as string, feedbackText as string)
}

if (Astro.request.method === 'POST') {
  try {
    const res = await handlePost()
    if (res) {
      return res
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message)
    }
  }
} else {
  await handleGet()
}
---

<Layout
  title="Submit Feedback to ben9583"
  description="Submit Feedback to ben9583 from the code you've received from him, and he'll read your feedback shortly."
>
  <div class="max-w-xl mx-auto">
    <main class="main-content ml-4 mr-4 py-8 max-w-xl">
      <h1 class="text-3xl font-bold mb-8">Submit Feedback</h1>
      {
        data ? (
          <>
            <h2 class="mb-4 text-xl">
              <b>Hello, {data.from_user}.</b>
            </h2>
            <p class="mb-4 text-lg">
              You've received a code from <b>{data.for_user}</b> asking for
              feedback on a recent encounter. Please use the following textbox
              to submit your thoughts.
            </p>
            <p class="mb-8 text-lg">Thank you!</p>
            <form method="POST">
              <label for="feedback-text" class="text-lg">
                Feedback:
              </label>
              <br />
              <textarea
                id="feedback-text"
                name="feedback-text"
                placeholder="Enter feedback here..."
                class="my-4 w-full"
                required
                maxlength={65535}
              />
              <br />
              <Input type="hidden" value={data.code} id="code" name="code" />
              <Input type="submit" value="Submit" />
            </form>
          </>
        ) : (
          <>
            <p class="mb-4 text-lg">
              Welcome, please submit the code you received from Ben. If you
              didn't receive a code, but were instructed to come here by him,
              please ask for it. Otherwise, this submitting feedback is invite
              only for now.
            </p>
            <form method="POST">
              <>
                <label for="code" class="mr-2">
                  Code:
                </label>
                <Input
                  id="code"
                  name="code"
                  placeholder="Enter code here..."
                  type="text"
                  required
                  minlength={32}
                  maxlength={32}
                />
              </>
              <Input type="submit" value="Submit" />
            </form>
          </>
        )
      }
      <p class="mt-4 text-lg text-red-500">{message}</p>
    </main>
  </div>
</Layout>
