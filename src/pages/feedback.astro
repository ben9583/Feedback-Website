---
import pg from "pg";
import Input from "../components/Input.astro";
import Layout from "../layouts/Layout.astro";

import { config } from "dotenv"
config()

interface DatabaseEntry {
  id: number;
  for_user: string;
  from_user: string;
  code: string;
  created_on: string;
  submitted: boolean;
  response: string;
  submitted_on: string;
}

let message = ""
const client = new pg.Client();

const handleGet = async (): Promise<DatabaseEntry | undefined> => {
  const url = new URL(Astro.request.url)
  const params = new URLSearchParams(url.search)
  const codeQuery = params.get("code");
  if(!codeQuery) return;
  if(codeQuery.length !== 32) {
    message = "Invalid code. Please try again.";
    await client.end();
    return;
  };
  
  await client.connect();
  const res = await client.query("SELECT * FROM feedback WHERE code = $1", [codeQuery]);
  if(res.rowCount === 0) {
    message = "Invalid code. Please try again.";
    await client.end();
    return;
  };

  const entry: DatabaseEntry = res.rows[0];
  if(entry.submitted) {
    message = "This code has already been submitted. Please contact Ben if you need to resubmit.";
    await client.end();
    return;
  }

  message = "";
  await client.end();
  return res.rows[0]
}

const handlePost = async (): Promise<Response | DatabaseEntry | undefined> => {
  const data = await Astro.request.formData();
  const codeQuery = data.get("code");
  if(!codeQuery) return
  
  const feedbackText = data.get("feedback-text");
  await client.connect();
  if(feedbackText && feedbackText.toString().trim()) {
    const res = await client.query("SELECT * FROM feedback WHERE code = $1", [codeQuery]);
    if(res.rowCount === 0) {
      message = "Invalid code. Please try again.";
      await client.end();
      return;
    };

    const entry: DatabaseEntry = res.rows[0];
    if(entry.submitted) {
      message = "This code has already been submitted. Please contact Ben if you need to resubmit.";
      await client.end();
      return;
    }

    await client.query("UPDATE feedback SET submitted = true, response = $1, submitted_on = NOW() WHERE code = $2 RETURNING *", [feedbackText, codeQuery]);
    await client.end();
    return Astro.redirect("/thanks", 302)
  } else {
    const res = await client.query("SELECT * FROM feedback WHERE code = $1", [codeQuery]);
    if(res.rowCount === 0) {
      message = "Invalid code. Please try again.";
      await client.end();
      return;
    };

    const entry: DatabaseEntry = res.rows[0];
    if(entry.submitted) {
      message = "This code has already been submitted. Please contact Ben if you need to resubmit.";
      await client.end();
      return;
    }

    message = "";
    await client.end();
    return res.rows[0]
  }
}

let data;
if(Astro.request.method === "POST") {
  try {
    data = await handlePost();
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
} else {
  data = await handleGet();
}

if(data instanceof Response) {
  return data;
}
---

<Layout title="Submit Feedback to ben9583" description="Submit Feedback to ben9583 from the code you've received from him, and he'll read your feedback shortly.">
  <div class="max-w-xl mx-auto">
    <main class="main-content ml-4 mr-4 py-8 max-w-xl">
      <h1 class="text-3xl font-bold mb-8">Submit Feedback</h1>
      {
        data ? (
          <p class="mb-4">
            <b>Hello, {data.from_user}.</b>
          </p>
          <p class="mb-4">
            You've received a code from <b>{data.for_user}</b> asking for feedback
            on a recent encounter. Please use the following textbox to submit your
            thoughts.
          </p>
          <p class="mb-4">
            Thank you!
          </p>
          <form method="POST">
            <label for="feedback-text">Feedback:</label><br />
            <textarea id="feedback-text" name="feedback-text" placeholder="Enter feedback here..." class="mb-4 w-full" required maxlength={65535} /><br />
            <Input type="hidden" value={data.code} id="code" name="code" />
            <Input type="submit" value="Submit" />
          </form>
        ) : (
          <p class="mb-4">
            Welcome, please submit the code you received from Ben. If you didn't
            receive a code, but were instruct to come here by him, please ask for
            it. Otherwise, this submitting feedback is invite only for now.
          </p>
          <form method="POST">
            <label for="code" class="mr-2">Code:</label><Input id="code" name="code" placeholder="Enter code here..." type="text" required minlength={32} maxlength={32} />
            <Input type="submit" value="Submit" />
          </form>
        )
      }
      <p class="mt-4 text-red-500">{message}</p>
    </main>
  </div>
</Layout>
